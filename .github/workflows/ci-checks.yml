name: ci-checks
on: [push]
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgl1-mesa-dev libegl1-mesa-dev libglu1-mesa-dev lxde libxi-dev
          pip3 install meson

      - name: Build
        shell: bash
        run: |
          meson build
          ninja -C build

      - name: Prepare upload
        shell: bash
        run: |
          mkdir -p upload/assets
          cp build/complementary upload/complementary
          cp -r assets/ upload/assets/
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-linux
          path: |
            upload

  build-mac:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        shell: bash
        run: |
          brew install ninja
          pip3 install meson

      - name: Build
        shell: bash
        run: |
          meson build
          ninja -C build

      - name: Prepare upload
        shell: bash
        run: |
          mkdir -p upload/assets
          cp build/complementary upload/complementary
          cp -r assets/ upload/assets/
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-mac
          path: |
            upload

  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install meson

      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          meson setup build --backend vs
          meson compile -C build -j0

      - name: Prepare upload
        shell: cmd
        run: |
          mkdir upload
          copy build\complementary.exe upload\complementary.exe /B
          xcopy assets upload\assets /E /I
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-windows
          path: |
            upload

  check-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash
        run: |
          sudo apt-get install clang-format
      - shell: bash
        run: |
          ! clang-format *.h *.cpp -style=file --output-replacements-xml | grep "<replacement "

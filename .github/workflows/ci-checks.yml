name: ci-checks
on: [push]
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Apply build cache
        id: cache-build
        uses: actions/cache@v2
        with:
          path: |
            build
            subprojects/*
            !subprojects/packagefiles
            !subprojects/*.wrap
          key: ${{ runner.os }}-build-${{ secrets.CACHE_VERSION }}

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgl1-mesa-dev libegl1-mesa-dev libglu1-mesa-dev lxde libxi-dev xorg-dev pulseaudio libasound2-dev libpulse-dev alsa-base alsa-utils 
          pip3 install meson

      - name: Build
        shell: bash
        run: |
          meson build --buildtype release
          ninja -C build

      - name: Prepare upload
        shell: bash
        run: |
          mkdir -p upload
          cp build/complementary upload/complementary
          cp THIRD_PARTY_LICENSES.txt upload/THIRD_PARTY_LICENSES.txt
          cp -r assets upload/assets
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-linux
          path: |
            upload

      - name: Build (Debug)
        shell: bash
        run: |
          meson build-debug
          ninja -C build-debug

      - name: Prepare upload (Debug)
        shell: bash
        run: |
          mkdir -p upload-debug
          cp build-debug/complementary upload-debug/complementary
          cp THIRD_PARTY_LICENSES.txt upload-debug/THIRD_PARTY_LICENSES.txt
          cp -r assets upload-debug/assets
          
      - name: Upload artifacts (Debug)
        uses: actions/upload-artifact@v2
        with:
          name: complementary-linux-debug
          path: |
            upload-debug

  build-mac:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Apply build cache
        id: cache-build
        uses: actions/cache@v2
        with:
          path: |
            build
            subprojects/*
            !subprojects/packagefiles
            !subprojects/*.wrap
          key: ${{ runner.os }}-build-${{ secrets.CACHE_VERSION }}

      - name: Install dependencies
        shell: bash
        run: |
          pip3 install meson ninja

      - name: Build
        shell: bash
        run: |
          meson build --buildtype release
          ninja -C build

      - name: Prepare upload
        shell: bash
        run: |
          mkdir -p upload
          cp build/complementary upload/complementary
          cp THIRD_PARTY_LICENSES.txt upload/THIRD_PARTY_LICENSES.txt
          cp -r assets upload/assets
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-mac
          path: |
            upload

      - name: Build (Debug)
        shell: bash
        run: |
          meson build-debug
          ninja -C build-debug

      - name: Prepare upload (Debug)
        shell: bash
        run: |
          mkdir -p upload-debug
          cp build-debug/complementary upload-debug/complementary
          cp THIRD_PARTY_LICENSES.txt upload-debug/THIRD_PARTY_LICENSES.txt
          cp -r assets upload-debug/assets
          
      - name: Upload artifacts (Debug)
        uses: actions/upload-artifact@v2
        with:
          name: complementary-mac-debug
          path: |
            upload-debug

  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Apply build cache
        id: cache-build
        uses: actions/cache@v2
        with:
          path: |
            subprojects/*
            !subprojects/packagefiles
            !subprojects/*.wrap
          key: ${{ runner.os }}-build-${{ secrets.CACHE_VERSION }}

      - name: Install dependencies
        run: |
          pip install meson

      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          meson build --backend vs --buildtype release
          meson compile -C build -j0

      - name: Prepare upload
        shell: cmd
        run: |
          mkdir upload
          copy build\complementary.exe upload\complementary.exe /B
          copy THIRD_PARTY_LICENSES.txt upload\THIRD_PARTY_LICENSES.txt
          xcopy assets upload\assets /E /I
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-windows
          path: |
            upload

      - name: Build (Debug)
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          meson build-debug --backend vs
          meson compile -C build-debug -j0

      - name: Prepare upload
        shell: cmd
        run: |
          mkdir upload-debug
          copy build-debug\complementary.exe upload-debug\complementary.exe /B
          copy THIRD_PARTY_LICENSES.txt upload-debug\THIRD_PARTY_LICENSES.txt
          xcopy assets upload-debug\assets /E /I
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: complementary-windows-debug
          path: |
            upload-debug

  check-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - shell: bash
        run: |
          sudo apt-get install clang-format
      - shell: bash
        run: |
          ! ./tools/format.sh --output-replacements-xml | grep "<replacement "
